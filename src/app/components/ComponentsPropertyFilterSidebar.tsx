import { useState } from "react";
import { ChevronDown, ChevronRight, Settings, ChevronUp } from "lucide-react";
import ComponentsPriceRangeSlider from "./ComponentsPriceRangeSlider";

export default function ComponentsPropertyFilterSidebar() {
  const [showAdvanced, setShowAdvanced] = useState(false);
  const [showPriceSlider, setShowPriceSlider] = useState(false);

  const toggleAdvanced = () => setShowAdvanced((prev) => !prev);
  const togglePriceSlider = () => setShowPriceSlider((prev) => !prev);

  const features = [
    { label: "‡πÅ‡∏≠‡∏£‡πå", icon: "‚ùÑÔ∏è" },
    { label: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ã‡∏±‡∏Å‡∏ú‡πâ‡∏≤", icon: "üõã" },
    { label: "‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏ó‡∏≥‡∏ô‡πâ‡∏≥‡∏≠‡∏∏‡πà‡∏ô", icon: "üî•" },
    { label: "Wi-Fi", icon: "üì°" },
    { label: "‡∏™‡∏£‡∏∞‡∏ß‡πà‡∏≤‡∏¢‡∏ô‡πâ‡∏≥", icon: "üèä" },
    { label: "‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏î‡∏£‡∏ñ", icon: "üöó" },
    { label: "‡∏ü‡∏¥‡∏ï‡πÄ‡∏ô‡∏™", icon: "üèãÔ∏è" },
    { label: "‡∏Å‡∏•‡πâ‡∏≠‡∏á‡∏ß‡∏á‡∏à‡∏£‡∏õ‡∏¥‡∏î", icon: "üì∑" },
  ];

  return (
    <div className="bg-base-100 border border-base-300 p-5 rounded-box space-y-4 text-sm">
      <input
        type="text"
        placeholder="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤ ‡πÄ‡∏ä‡πà‡∏ô ‡∏ö‡πâ‡∏≤‡∏ô‡∏°‡∏∑‡∏≠‡∏™‡∏≠‡∏á"
        className="input input-bordered input-sm w-full"
      />

      <select className="select select-bordered select-sm w-full">
        <option>‡∏ó‡∏≥‡πÄ‡∏•</option>
        <option>‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏Ø</option>
        <option>‡πÄ‡∏ä‡∏µ‡∏¢‡∏á‡πÉ‡∏´‡∏°‡πà</option>
      </select>

      <select className="select select-bordered select-sm w-full">
        <option>‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó</option>
        <option>‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏î‡∏µ‡πà‡∏¢‡∏ß</option>
        <option>‡∏Ñ‡∏≠‡∏ô‡πÇ‡∏î</option>
      </select>

      {/* üëâ ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏à‡∏≤‡∏Å select ‡πÄ‡∏õ‡πá‡∏ô‡∏õ‡∏∏‡πà‡∏° */}
      <div className="border border-base-300 rounded-box">
        <button
          onClick={togglePriceSlider}
          className="w-full flex justify-between items-center px-4 py-2"
        >
          <span className="text-sm font-medium text-base-content">
            ‡∏ä‡πà‡∏ß‡∏á‡∏£‡∏≤‡∏Ñ‡∏≤
          </span>
          {showPriceSlider ? (
            <ChevronUp className="w-4 h-4 text-base-content/70" />
          ) : (
            <ChevronDown className="w-4 h-4 text-base-content/70" />
          )}
        </button>
        {showPriceSlider && (
          <div className="p-4">
            <ComponentsPriceRangeSlider />
          </div>
        )}
      </div>

      <select className="select select-bordered select-sm w-full">
        <option>‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥</option>
      </select>
      <select className="select select-bordered select-sm w-full">
        <option>‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô</option>
      </select>
      <select className="select select-bordered select-sm w-full">
        <option>‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏î‡∏£‡∏ñ</option>
      </select>
      <select className="select select-bordered select-sm w-full">
        <option>‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á</option>
      </select>

      <div className="flex gap-2">
        <input
          type="text"
          placeholder="‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏ï‡πà‡∏≥‡∏™‡∏∏‡∏î"
          className="input input-bordered input-sm w-full"
        />
        <input
          type="text"
          placeholder="‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏π‡∏á‡∏™‡∏∏‡∏î"
          className="input input-bordered input-sm w-full"
        />
      </div>

      {/* üîΩ ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
      <div className="mt-2">
        <button
          onClick={toggleAdvanced}
          className="text-error text-sm flex items-center gap-1 font-semibold"
        >
          <Settings className="w-4 h-4" />
          ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏°‡∏ö‡∏±‡∏ï‡∏¥‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏°
          {showAdvanced ? (
            <ChevronDown className="w-4 h-4" />
          ) : (
            <ChevronRight className="w-4 h-4" />
          )}
        </button>

        {showAdvanced && (
          <div className="grid grid-cols-2 gap-2 mt-3">
            {features.map((item) => (
              <label key={item.label} className="flex items-center gap-2">
                <input type="checkbox" className="checkbox checkbox-sm" />
                <span>
                  {item.icon} {item.label}
                </span>
              </label>
            ))}
          </div>
        )}
      </div>

      <button className="btn btn-error btn-sm w-full mt-4">‡∏•‡πâ‡∏≤‡∏á‡∏ï‡∏±‡∏ß‡∏Å‡∏£‡∏≠‡∏á</button>
    </div>
  );
}
